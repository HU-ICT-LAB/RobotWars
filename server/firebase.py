"""Firebase Setup (Probably not going to use this)."""
import firebase_admin
from firebase_admin import credentials, db
from datetime import datetime
from firebase_admin import storage


def setup_firebase():
    """Firebase connection setup."""
    cred = credentials.Certificate("service_account_key.json")
    firebase_admin.initialize_app(cred, {
        'databaseURL': 'https://robotwars-6fc0a-default-rtdb.'
                       'europe-west1.firebasedatabase.app/',
        'storageBucket': 'robotwars-6fc0a.appspot.com'
    })


def get_all_data():
    """Return all data in firebase."""
    return db.reference("all_findings/").get()


def write_findings_to_database(policy_path, findings):
    """
    Save the findings by the RoboMaster during it's last training round.

    :param policy_path: reference to policy file in firebase.
    :param findings: the dictionary of all the findings and results.
    :return: returns the unique key generated by firebase.
    """
    data_reference = db.reference("all_findings/")

    key = data_reference.push().set({
        "time": datetime.now().strftime("%d/%m/%Y_%H:%M:%S"),
        "policy": policy_path,
        "findings": findings
    })
    upload_file(policy_path)
    return key


def upload_file(path):
    """
    Upload file to firebase storage

    :param path: path to file.
    """
    bucket = storage.bucket()
    blob = bucket.blob(path)
    blob.upload_from_filename(path)


if __name__ == "__main__":
    setup_firebase()
    print(get_all_data())
    write_findings_to_database("test.txt", {"turn_left": "ok", "turn_right": "error"})
    print(get_all_data())
    upload_file("test.txt")
